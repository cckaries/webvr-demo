{"version":3,"sources":["components/LiveTour/ItemList/Item/Item.module.css","containers/LiveTour/LiveTour.module.css","components/LiveTour/Header/Header.module.css","components/LiveTour/ItemList/ItemList.module.css","components/LiveTour/Viewport/Viewport.module.css","store/actions/liveTourActions.js","store/actions/actionTypes.js","components/LiveTour/Header/Header.js","components/LiveTour/ItemList/Item/Item.js","components/LiveTour/ItemList/ItemList.js","components/LiveTour/Viewport/Viewport.js","containers/LiveTour/LiveTour.js","App.js","shared/utility.js","store/reducers/liveTourReducers.js","index.js"],"names":["module","exports","Container","active","Wrapper","choosePanorama","type","index","arguments","length","undefined","header","props","react_default","a","createElement","className","styles","title","Item","classes","isActive","join","onClick","clicked","item","src","thumbnail","alt","name","category","ItemList","items","map","ItemList_Item_Item","activePanorama","key","chooseItem","Viewport","embedded","background","image","LiveTour","componentDidMount","_this","onFetchPanoramas","changePanoramaHandler","onChoosePanorama","LiveTour_Viewport_Viewport","this","chosenPanorama","desktopUrl","Header","LiveTour_ItemList_ItemList","panoramas","Component","connect","state","ownProps","liveTour","loading","dispatch","firebase","initializeApp","databaseURL","serviceAccount","__webpack_require__","e","then","t","bind","database","ref","orderByChild","equalTo","once","snapshot","dataObj","val","dataArr","i","data","push","sort","b","actions","App","containers_LiveTour_LiveTour","updateObject","oldObject","updatedProperties","Object","objectSpread","initialState","error","reducer","action","fetchPanoramasStart","fetchPanoramasSuccess","fetchPanoramasFail","composeEnhancers","rootReducer","combineReducers","liveTourReducer","store","createStore","applyMiddleware","thunk","myApp","es","src_App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a53e0107.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Item_Container__1m_lB\",\"active\":\"Item_active__1PtTM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"LiveTour_Container__3FLw2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Header_Container__VbO-9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ItemList_Container__1jbwx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Viewport_Wrapper__3463c\"};","import firebase from 'firebase';\n\nimport * as actionTypes from './actionTypes';\n\nexport const fetchPanoramasStart = () => {\n  return {\n    type: actionTypes.FETCH_PANORAMAS_START\n  };\n};\n\nexport const fetchPanoramasFail = () => {\n  return {\n    type: actionTypes.FETCH_PANORAMAS_FAIL\n  };\n};\n\nexport const fetchPanoramasSuccess = data => {\n  return {\n    type: actionTypes.FETCH_PANORAMAS_SUCCESS,\n    data: data\n  };\n};\n\nexport const fetchPanoramas = () => {\n  return dispatch => {\n    const VRCamFirebase = firebase.initializeApp({\n      databaseURL: 'https://vr-cam-161603.firebaseio.com',\n      serviceAccount: import('../../serviceAccountKey.json')\n    });\n\n    const liveTourId = '2d4e0ff2-681f-479b-bae2-16fcaf884fa5';\n    const fetchPanoramas = VRCamFirebase.database()\n      .ref('/panoramas')\n      .orderByChild('Building')\n      .equalTo(liveTourId);\n    fetchPanoramas.once('value', snapshot => {\n      const dataObj = snapshot.val();\n      let dataArr = [];\n\n      for (let i in dataObj) {\n        let item = dataObj[i].data;\n        dataArr.push(item);\n      }\n\n      dataArr.sort(function(a, b) {\n        return a.index - b.index;\n      });\n\n      dispatch(fetchPanoramasSuccess(dataArr));\n      dispatch(choosePanorama());\n    });\n  };\n};\n\nexport const choosePanorama = (index = null) => {\n  return {\n    type: actionTypes.CHOOSE_PANORAMA,\n    index: index\n  };\n};\n","export const FETCH_PANORAMAS_START = 'FETCH_PANORAMAS_START';\nexport const FETCH_PANORAMAS_SUCCESS = 'FETCH_PANORAMAS_SUCCESS';\nexport const FETCH_PANORAMAS_FAIL = 'FETCH_PANORAMAS_FAIL';\nexport const CHOOSE_PANORAMA = 'CHOOSE_PANORAMA';\n","import React from 'react';\n\nimport * as styles from './Header.module.css';\n\nconst header = props => {\n  return (\n    <div className={styles.Container}>\n      <div>{props.title}</div>\n      {/* <div>\n        <button>B1</button>\n        <button>B1</button>\n        <button>B1</button>\n        <button>B1</button>\n      </div> */}\n    </div>\n  );\n};\n\nexport default header;\n","import React from 'react';\n\nimport * as styles from './Item.module.css';\n\nconst Item = props => {\n  let classes = [styles.Container, props.isActive ? styles.active : null].join(' ');\n\n  return (\n    <div className={classes} onClick={() => props.clicked(props.item.index)}>\n      <img src={props.item.thumbnail} alt={props.item.name} />\n      <div>{props.item.category}</div>\n    </div>\n  );\n};\n\nexport default Item;\n","import React from 'react';\n\nimport * as styles from './ItemList.module.css';\nimport Item from './Item/Item';\n\nconst ItemList = props => {\n  let items =\n    props.items &&\n    props.items.map(item => (\n      <Item\n        item={item}\n        isActive={item.index === props.activePanorama}\n        key={item.index}\n        clicked={props.chooseItem}\n      />\n    ));\n\n  return (\n    <div className={styles.Container}>\n      <div>{items}</div>\n    </div>\n  );\n};\n\nexport default ItemList;\n","import React from 'react';\n\nimport * as styles from './Viewport.module.css';\n\nconst Viewport = props => {\n  return (\n    <div className={styles.Wrapper}>\n      <a-scene embedded background=\"color: #ECECEC\">\n        <a-sky src={props.image} />\n      </a-scene>\n    </div>\n  );\n};\n\nexport default Viewport;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport * as styles from './LiveTour.module.css';\nimport * as actions from '../../store/actions/index';\nimport Header from '../../components/LiveTour/Header/Header';\nimport ItemList from '../../components/LiveTour/ItemList/ItemList';\nimport Viewport from '../../components/LiveTour/Viewport/Viewport';\n\nclass LiveTour extends Component {\n  componentDidMount = () => {\n    this.props.onFetchPanoramas();\n  };\n\n  changePanoramaHandler = index => {\n    this.props.onChoosePanorama(index);\n  };\n\n  render() {\n    return (\n      <div className={styles.Container}>\n        <Viewport image={this.props.chosenPanorama.desktopUrl} />\n        <Header title={this.props.chosenPanorama.category} />\n        <ItemList\n          items={this.props.panoramas}\n          activePanorama={this.props.chosenPanorama.index}\n          chooseItem={this.changePanoramaHandler}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    panoramas: state.liveTour.panoramas,\n    chosenPanorama: state.liveTour.chosenPanorama,\n    loading: state.liveTour.chosenPanorama\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onFetchPanoramas: () => dispatch(actions.fetchPanoramas()),\n    onChoosePanorama: index => dispatch(actions.choosePanorama(index))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LiveTour);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport LiveTour from './containers/LiveTour/LiveTour';\n\nclass App extends Component {\n  render() {\n    return <LiveTour />;\n  }\n}\n\nexport default connect()(App);\n","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  };\n};","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n  panoramas: null,\n  chosenPanorama: {},\n  loading: false,\n  error: null\n}\n\nconst fetchPanoramasStart = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  })\n}\n\nconst fetchPanoramasSuccess = (state, action) => {\n  return updateObject(state, {\n    panoramas: action.data,\n    loading: false\n  })\n}\n\nconst fetchPanoramasFail = (state, action) => {\n  return updateObject(state, {\n    loading: false,\n    error: action.error\n  })\n}\n\nconst choosePanorama = (state, action) => {\n  return updateObject(state, {\n    chosenPanorama: action.index ? state.panoramas[action.index] : state.panoramas[0]\n  })\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_PANORAMAS_START: return fetchPanoramasStart(state, action);\n    case actionTypes.FETCH_PANORAMAS_SUCCESS: return fetchPanoramasSuccess(state, action);\n    case actionTypes.FETCH_PANORAMAS_FAIL: return fetchPanoramasFail(state, action);\n    case actionTypes.CHOOSE_PANORAMA: return choosePanorama(state, action);\n    default: return state;\n  }\n}\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport liveTourReducer from './store/reducers/liveTourReducers'\n\nconst composeEnhancers =\n  process.env.NODE_ENV === 'development'\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n    : null;\n\nconst rootReducer = combineReducers({\n  liveTour: liveTourReducer\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst myApp = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(myApp, document.getElementById('root'));\n"],"sourceRoot":""}